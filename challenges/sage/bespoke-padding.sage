from Crypto.Util.number import long_to_bytes 

r1 = {  'encrypted_flag': 2697821893796709266090202702541407392332863175586374273758132411691534478513473650055115821713739576027175862679913665470758587871731925109284437254301365897228698411783259219538319247340195574938472640768549920733825726130880311067892240678118025735562975489830123554419635943048777915420432539738022529921930368125370116148477997741108582465194879389068266145992718271714372055151296570999704343910185343779037672868005884681919943136213783057773562335637022601028334909335813035787304740400762799307732283801828258964661086348510551031962835749066547069820548136664492689943944154902745020394800277415737512440473, 
        'modulus': 9250542629970277315293977949415927603640282169965330012052209956510306262681064070639885521634000265429977828243487760531917176635829059578266946005342504464698982182962969254783849619641625174644381562175814762848944760980603368980332643194683735067608770504950426329512276690975772048892708962499705830556663833623920837503433016574403128702874927820027277412866471472751990539097141523404612883710426690755241608649544713119244657462208149177144993671943220570100036184677212913198074334672596850354122054740087640108214335604253773544072506580691119526086222551669993541720002666257253280782441458085017485123371, 
        'padding': 
            [2492925695006077487163875543606759223661098170875235268582813799264921439743597359082254939254572779017210742046616533465167772068267668415455336896623016850655475498809882281453529899502428835494235002800367072969434707770167925129006239027285141878054314176668070633901079166919618707091819646897354355905818043056701708442047795479656723002610038046693041272020539733671830361553982879448634511366956590069469731817658191946015612714203548892884585702989370630933692527040627896128402259474381115849077052720949978894860963273757499109647202116266629939386865766387770918031316782874322398075887859389459336312313, 
            7891417304788968512329919594969020065856207358807746982008389704688765150890859711698419187045369854406080989395001333774604980586396220990131610153315126393813484835354032735846971789075204386831165900954985887140114306766949008223250102683664422269785908109753543930676911242680358287315803564294632839880477437502677329948604470265363410998879575819280946359102715810493332074684013010220366594799212514757038160725542064334535782906246573292504087145507298996041716784005999292070043168550118239823396676907851405814090886471508656512130121453921893638407448180596605137070881214110436634756288602456232093380140]}
r2 = {  'encrypted_flag': 3790788551671836892988060412322337694549250382776213909163313537133670824139205848101793651692623571122993150313733230289642300726943090139115631988540045328748629192583611114523247368526834837036774900211587180047407159494783010511514673764769426954035603102063609328711488801462519029900297820945724868974791533133209980233753602973834997972294077989029155873335407466578122942511752772820298982186392669631870109755187144825403658312873568693469088385637399511288554078035311277377270988660897448304943075886232632744539067807700095537747292657496396310459350015331546578467700187325235478047702288883213729518188, 
        'modulus': 9250542629970277315293977949415927603640282169965330012052209956510306262681064070639885521634000265429977828243487760531917176635829059578266946005342504464698982182962969254783849619641625174644381562175814762848944760980603368980332643194683735067608770504950426329512276690975772048892708962499705830556663833623920837503433016574403128702874927820027277412866471472751990539097141523404612883710426690755241608649544713119244657462208149177144993671943220570100036184677212913198074334672596850354122054740087640108214335604253773544072506580691119526086222551669993541720002666257253280782441458085017485123371, 
        'padding': 
            [1819766692438630749310864288415583420317484539930282207390190443338700193029628308282393688912861147032602516590541561000612807390994909609896842361976442427661069913002134628274100239772832107638265360185421919654522851413948854375150331688578400917345201944972908945497607804800272201898483520043647903140983633114039726387218283384652593538012512365151202735958414723934111545057998086274735912717692346933944081567081493581130133552347403344283461074974862643738394156227117060356138282937002645004728317925675367190085993237814720782445359583286492790527593206253038439945284075696069479637656943821047281414089, 
            3546002672200786750878798365307132206775890888259738306788093686843232129582633621212532517507326078651464953533361011172400488637817694266578106277853029801920448908229000383782424390858045386340807637560411247476722187957524253858031710216484743272662894582766494484353538920046887948005575504740323204630304534810829127740758083947080351937155184120327828160005291372521368289174290712724487657432193296624343886804678508167686964140131816819452347852633698751713421489825083635174031080005499300546140452762579083348786446963389965741776507755901498795968533575314435463670272875777831295049419851480049201989272]}

N = r1['modulus'] 
e = 11 

c1 = r1['encrypted_flag'] 
a1 = r1['padding'][0]
b1 = r1['padding'][1] 

c2 = r2['encrypted_flag'] 
a2 = r2['padding'][0]
b2 = r2['padding'][1] 


def gcd(x, y):
    while y != 0:
        (x, y) = (y, x % y)
    return x.monic() 



x = PolynomialRing(Zmod(N), 'x').gen() 
g1 = (a1*x+b1)**e - c1  
g2 = (a2*x+b2)**e - c2 

print(-gcd(g1,g2).coefficients()[0]) 
